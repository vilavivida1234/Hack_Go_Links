{"ast":null,"code":"var _jsxFileName = \"/Users/chuhanyu/Desktop/temp/frontend-intern-hackday/src/components/RepositoryList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport CommitList from \"./CommitList\";\nimport Modal from \"react-modal\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RepositoryList(_ref) {\n  _s();\n  let {\n    organizationName = \"Netflix\"\n  } = _ref;\n  const [repositories, setRepositories] = useState([]);\n  const [selectedRepository, setSelectedRepository] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  useEffect(() => {\n    fetch(`https://api.github.com/orgs/${organizationName}/repos`).then(response => response.json()).then(response => console.log(response)).then(data => setRepositories(data)).catch(error => console.log(error));\n  }, [organizationName]);\n  const handleRepositoryClick = repository => {\n    setSelectedRepository(repository);\n    setModalIsOpen(true);\n  };\n  const closeModal = () => {\n    setSelectedRepository(null);\n    setModalIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [organizationName, \" Repositories\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: repositories && repositories.length > 0 ? repositories.map(repository => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRepositoryClick(repository),\n          children: repository.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Language: \", repository.language]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", repository.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Star count: \", repository.stargazers_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Fork count: \", repository.forks_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date created: \", repository.created_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)]\n      }, repository.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Repository found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      style: customStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: customStyles.closeButtonWrapper,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          style: closeButtonStyles,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), selectedRepository && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Commit History for \", selectedRepository.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CommitList, {\n          organizationName: organizationName,\n          repoName: selectedRepository.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(RepositoryList, \"0WBWuGBLQittefbRfbYFpgZNBvs=\");\n_c = RepositoryList;\nconst customStyles = {\n  overlay: {\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\"\n  },\n  content: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"800px\",\n    height: \"500px\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    overflow: \"auto\"\n  },\n  closeButtonWrapper: {\n    position: \"fixed\",\n    top: \"10px\",\n    right: \"10px\"\n  }\n};\nconst closeButtonStyles = {\n  border: \"none\",\n  background: \"none\",\n  fontSize: \"24px\"\n};\nRepositoryList.propTypes = {\n  organizationName: PropTypes.string\n};\nexport default RepositoryList;\nvar _c;\n$RefreshReg$(_c, \"RepositoryList\");","map":{"version":3,"names":["React","useEffect","useState","CommitList","Modal","PropTypes","jsxDEV","_jsxDEV","RepositoryList","_ref","_s","organizationName","repositories","setRepositories","selectedRepository","setSelectedRepository","modalIsOpen","setModalIsOpen","fetch","then","response","json","console","log","data","catch","error","handleRepositoryClick","repository","closeModal","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","name","language","description","stargazers_count","forks_count","created_at","id","isOpen","onRequestClose","style","customStyles","closeButtonWrapper","closeButtonStyles","repoName","_c","overlay","backgroundColor","content","position","top","left","transform","width","height","alignItems","justifyContent","overflow","right","border","background","fontSize","propTypes","string","$RefreshReg$"],"sources":["/Users/chuhanyu/Desktop/temp/frontend-intern-hackday/src/components/RepositoryList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport CommitList from \"./CommitList\";\nimport Modal from \"react-modal\";\nimport PropTypes from \"prop-types\";\n\nfunction RepositoryList({ organizationName = \"Netflix\" }) {\n  const [repositories, setRepositories] = useState([]);\n  const [selectedRepository, setSelectedRepository] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  useEffect(() => {\n    fetch(`https://api.github.com/orgs/${organizationName}/repos`)\n      .then((response) => response.json())\n      .then((response) => console.log(response))\n      .then((data) => setRepositories(data))\n      .catch((error) => console.log(error));\n  }, [organizationName]);\n\n  const handleRepositoryClick = (repository) => {\n    setSelectedRepository(repository);\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setSelectedRepository(null);\n    setModalIsOpen(false);\n  };\n\n  return (\n    <div>\n      <h1>{organizationName} Repositories</h1>\n      <ul>\n        {repositories && repositories.length > 0 ? (\n          repositories.map((repository) => (\n            <li key={repository.id}>\n              <button onClick={() => handleRepositoryClick(repository)}>\n                {repository.name}\n              </button>\n              <p>Language: {repository.language}</p>\n              <p>Description: {repository.description}</p>\n              <p>Star count: {repository.stargazers_count}</p>\n              <p>Fork count: {repository.forks_count}</p>\n              <p>Date created: {repository.created_at}</p>\n            </li>\n          ))\n        ) : (\n          <p>No Repository found.</p>\n        )}\n      </ul>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n      >\n        <div style={customStyles.closeButtonWrapper}>\n          <button onClick={closeModal} style={closeButtonStyles}>\n            X\n          </button>\n        </div>\n        {selectedRepository && (\n          <div>\n            <h2>Commit History for {selectedRepository.name}</h2>\n            <CommitList\n              organizationName={organizationName}\n              repoName={selectedRepository.name}\n            />\n          </div>\n        )}\n      </Modal>\n    </div>\n  );\n}\n\nconst customStyles = {\n  overlay: {\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n  },\n  content: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"800px\",\n    height: \"500px\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    overflow: \"auto\",\n  },\n  closeButtonWrapper: {\n    position: \"fixed\",\n    top: \"10px\",\n    right: \"10px\",\n  },\n};\nconst closeButtonStyles = {\n  border: \"none\",\n  background: \"none\",\n  fontSize: \"24px\",\n};\n\nRepositoryList.propTypes = {\n  organizationName: PropTypes.string,\n};\n\nexport default RepositoryList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,cAAcA,CAAAC,IAAA,EAAmC;EAAAC,EAAA;EAAA,IAAlC;IAAEC,gBAAgB,GAAG;EAAU,CAAC,GAAAF,IAAA;EACtD,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAErDD,SAAS,CAAC,MAAM;IACdiB,KAAK,CAAE,+BAA8BP,gBAAiB,QAAO,CAAC,CAC3DQ,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEC,QAAQ,IAAKE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC,CAAC,CACzCD,IAAI,CAAEK,IAAI,IAAKX,eAAe,CAACW,IAAI,CAAC,CAAC,CACrCC,KAAK,CAAEC,KAAK,IAAKJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,CAACf,gBAAgB,CAAC,CAAC;EAEtB,MAAMgB,qBAAqB,GAAIC,UAAU,IAAK;IAC5Cb,qBAAqB,CAACa,UAAU,CAAC;IACjCX,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMY,UAAU,GAAGA,CAAA,KAAM;IACvBd,qBAAqB,CAAC,IAAI,CAAC;IAC3BE,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACEV,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,GAAKnB,gBAAgB,EAAC,eAAa;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxC3B,OAAA;MAAAuB,QAAA,EACGlB,YAAY,IAAIA,YAAY,CAACuB,MAAM,GAAG,CAAC,GACtCvB,YAAY,CAACwB,GAAG,CAAER,UAAU,iBAC1BrB,OAAA;QAAAuB,QAAA,gBACEvB,OAAA;UAAQ8B,OAAO,EAAEA,CAAA,KAAMV,qBAAqB,CAACC,UAAU,CAAE;UAAAE,QAAA,EACtDF,UAAU,CAACU;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACT3B,OAAA;UAAAuB,QAAA,GAAG,YAAU,EAACF,UAAU,CAACW,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtC3B,OAAA;UAAAuB,QAAA,GAAG,eAAa,EAACF,UAAU,CAACY,WAAW;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5C3B,OAAA;UAAAuB,QAAA,GAAG,cAAY,EAACF,UAAU,CAACa,gBAAgB;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChD3B,OAAA;UAAAuB,QAAA,GAAG,cAAY,EAACF,UAAU,CAACc,WAAW;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3C3B,OAAA;UAAAuB,QAAA,GAAG,gBAAc,EAACF,UAAU,CAACe,UAAU;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GARrCN,UAAU,CAACgB,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASlB,CACL,CAAC,gBAEF3B,OAAA;QAAAuB,QAAA,EAAG;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC3B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACL3B,OAAA,CAACH,KAAK;MACJyC,MAAM,EAAE7B,WAAY;MACpB8B,cAAc,EAAEjB,UAAW;MAC3BkB,KAAK,EAAEC,YAAa;MAAAlB,QAAA,gBAEpBvB,OAAA;QAAKwC,KAAK,EAAEC,YAAY,CAACC,kBAAmB;QAAAnB,QAAA,eAC1CvB,OAAA;UAAQ8B,OAAO,EAAER,UAAW;UAACkB,KAAK,EAAEG,iBAAkB;UAAApB,QAAA,EAAC;QAEvD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EACLpB,kBAAkB,iBACjBP,OAAA;QAAAuB,QAAA,gBACEvB,OAAA;UAAAuB,QAAA,GAAI,qBAAmB,EAAChB,kBAAkB,CAACwB,IAAI;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrD3B,OAAA,CAACJ,UAAU;UACTQ,gBAAgB,EAAEA,gBAAiB;UACnCwC,QAAQ,EAAErC,kBAAkB,CAACwB;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACxB,EAAA,CAlEQF,cAAc;AAAA4C,EAAA,GAAd5C,cAAc;AAoEvB,MAAMwC,YAAY,GAAG;EACnBK,OAAO,EAAE;IACPC,eAAe,EAAE;EACnB,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,KAAK;IACVC,IAAI,EAAE,KAAK;IACXC,SAAS,EAAE,uBAAuB;IAClCC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE,OAAO;IACfC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,QAAQ,EAAE;EACZ,CAAC;EACDf,kBAAkB,EAAE;IAClBO,QAAQ,EAAE,OAAO;IACjBC,GAAG,EAAE,MAAM;IACXQ,KAAK,EAAE;EACT;AACF,CAAC;AACD,MAAMf,iBAAiB,GAAG;EACxBgB,MAAM,EAAE,MAAM;EACdC,UAAU,EAAE,MAAM;EAClBC,QAAQ,EAAE;AACZ,CAAC;AAED5D,cAAc,CAAC6D,SAAS,GAAG;EACzB1D,gBAAgB,EAAEN,SAAS,CAACiE;AAC9B,CAAC;AAED,eAAe9D,cAAc;AAAC,IAAA4C,EAAA;AAAAmB,YAAA,CAAAnB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}