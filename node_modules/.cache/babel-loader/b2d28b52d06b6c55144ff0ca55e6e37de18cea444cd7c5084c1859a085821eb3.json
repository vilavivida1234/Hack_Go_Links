{"ast":null,"code":"var _jsxFileName = \"/Users/chuhanyu/Desktop/temp/frontend-intern-hackday/src/components/RepositoryList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport CommitList from \"./CommitList\";\nimport Modal from \"react-modal\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nfunction RepositoryList(_ref) {\n  _s();\n  let {\n    organizationName\n  } = _ref;\n  const [repositories, setRepositories] = useState([]);\n  const [selectedRepository, setSelectedRepository] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  useEffect(() => {\n    if (organizationName) {\n      fetch(`https://api.github.com/orgs/${organizationName}/repos`, {\n        headers: {\n          Authorization: `Bearer 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`\n        }\n      }).then(response => response.json()).then(data => setRepositories(data)).catch(error => console.log(error));\n    }\n  }, [organizationName]);\n  const handleRepositoryClick = repository => {\n    setSelectedRepository(repository);\n    setModalIsOpen(true);\n  };\n  const closeModal = () => {\n    setSelectedRepository(null);\n    setModalIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: organizationName ? organizationName + \" Repositories\" : \"Please input an organization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: repositories && repositories.length > 0 ? repositories.map(repository => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => handleRepositoryClick(repository),\n          children: repository.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Language: \", repository.language]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", repository.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Star count: \", repository.stargazers_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Fork count: \", repository.forks_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date created: \", repository.created_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)]\n      }, repository.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Repository found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      style: customStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: customStyles.closeButtonWrapper,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          style: closeButtonStyles,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), selectedRepository && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Commit History for \", selectedRepository.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CommitList, {\n          organizationName: organizationName,\n          repoName: selectedRepository.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(RepositoryList, \"0WBWuGBLQittefbRfbYFpgZNBvs=\");\n_c = RepositoryList;\nconst customStyles = {\n  overlay: {\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\"\n  },\n  content: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"800px\",\n    height: \"500px\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    overflow: \"auto\"\n  },\n  closeButtonWrapper: {\n    position: \"fixed\",\n    top: \"10px\",\n    right: \"10px\"\n  }\n};\nconst closeButtonStyles = {\n  border: \"none\",\n  background: \"none\",\n  fontSize: \"24px\"\n};\nRepositoryList.propTypes = {\n  organizationName: PropTypes.string\n};\nexport default RepositoryList;\nvar _c;\n$RefreshReg$(_c, \"RepositoryList\");","map":{"version":3,"names":["React","useEffect","useState","CommitList","Modal","PropTypes","jsxDEV","_jsxDEV","setAppElement","RepositoryList","_ref","_s","organizationName","repositories","setRepositories","selectedRepository","setSelectedRepository","modalIsOpen","setModalIsOpen","fetch","headers","Authorization","then","response","json","data","catch","error","console","log","handleRepositoryClick","repository","closeModal","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","name","language","description","stargazers_count","forks_count","created_at","id","isOpen","onRequestClose","style","customStyles","closeButtonWrapper","closeButtonStyles","repoName","_c","overlay","backgroundColor","content","position","top","left","transform","width","height","alignItems","justifyContent","overflow","right","border","background","fontSize","propTypes","string","$RefreshReg$"],"sources":["/Users/chuhanyu/Desktop/temp/frontend-intern-hackday/src/components/RepositoryList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport CommitList from \"./CommitList\";\nimport Modal from \"react-modal\";\nimport PropTypes from \"prop-types\";\n\nModal.setAppElement(\"#root\");\n\nfunction RepositoryList({ organizationName }) {\n  const [repositories, setRepositories] = useState([]);\n  const [selectedRepository, setSelectedRepository] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  useEffect(() => {\n    if (organizationName) {\n      fetch(`https://api.github.com/orgs/${organizationName}/repos`, {\n        headers: {\n          Authorization: `Bearer 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`,\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => setRepositories(data))\n        .catch((error) => console.log(error));\n    }\n  }, [organizationName]);\n\n  const handleRepositoryClick = (repository) => {\n    setSelectedRepository(repository);\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setSelectedRepository(null);\n    setModalIsOpen(false);\n  };\n\n  return (\n    <div>\n      <h1>\n        {organizationName\n          ? organizationName + \" Repositories\"\n          : \"Please input an organization\"}\n      </h1>\n      <ul>\n        {repositories && repositories.length > 0 ? (\n          repositories.map((repository) => (\n            <li key={repository.id}>\n              <a onClick={() => handleRepositoryClick(repository)}>\n                {repository.name}\n              </a>\n              <p>Language: {repository.language}</p>\n              <p>Description: {repository.description}</p>\n              <p>Star count: {repository.stargazers_count}</p>\n              <p>Fork count: {repository.forks_count}</p>\n              <p>Date created: {repository.created_at}</p>\n            </li>\n          ))\n        ) : (\n          <p>No Repository found.</p>\n        )}\n      </ul>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n      >\n        <div style={customStyles.closeButtonWrapper}>\n          <button onClick={closeModal} style={closeButtonStyles}>\n            X\n          </button>\n        </div>\n        {selectedRepository && (\n          <div>\n            <h2>Commit History for {selectedRepository.name}</h2>\n            <CommitList\n              organizationName={organizationName}\n              repoName={selectedRepository.name}\n            />\n          </div>\n        )}\n      </Modal>\n    </div>\n  );\n}\n\nconst customStyles = {\n  overlay: {\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n  },\n  content: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"800px\",\n    height: \"500px\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    overflow: \"auto\",\n  },\n  closeButtonWrapper: {\n    position: \"fixed\",\n    top: \"10px\",\n    right: \"10px\",\n  },\n};\nconst closeButtonStyles = {\n  border: \"none\",\n  background: \"none\",\n  fontSize: \"24px\",\n};\n\nRepositoryList.propTypes = {\n  organizationName: PropTypes.string,\n};\n\nexport default RepositoryList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}