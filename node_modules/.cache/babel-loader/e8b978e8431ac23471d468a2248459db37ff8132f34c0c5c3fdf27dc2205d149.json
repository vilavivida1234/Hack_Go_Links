{"ast":null,"code":"var _jsxFileName = \"/Users/chuhanyu/Desktop/temp/frontend-intern-hackday/src/components/RepositoryList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport CommitList from \"./CommitList\";\nimport Modal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RepositoryList() {\n  _s();\n  const [repositories, setRepositories] = useState([]);\n  const [selectedRepository, setSelectedRepository] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  useEffect(() => {\n    fetch(\"https://api.github.com/orgs/Netflix/repos\").then(response => response.json()).then(data => setRepositories(data)).catch(error => console.log(error));\n  }, []);\n  const handleRepositoryClick = repository => {\n    setSelectedRepository(repository);\n    setModalIsOpen(true);\n  };\n  const closeModal = () => {\n    setSelectedRepository(null);\n    setModalIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Netflix Repositories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: repositories.map(repository => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRepositoryClick(repository),\n          children: repository.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Language: \", repository.language]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", repository.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Star count: \", repository.stargazers_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Fork count: \", repository.forks_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date created: \", repository.created_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, repository.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      style: customStyles,\n      children: [selectedRepository && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Commit History for \", selectedRepository.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CommitList, {\n          repoName: selectedRepository.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        style: closeButtonStyles,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(RepositoryList, \"0WBWuGBLQittefbRfbYFpgZNBvs=\");\n_c = RepositoryList;\nconst closeButtonStyles = {\n  border: \"none\",\n  background: \"none\",\n  fontSize: \"24px\"\n};\nconst customStyles = {\n  overlay: {\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\"\n  },\n  content: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"800px\",\n    height: \"800px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n};\nexport default RepositoryList;\nvar _c;\n$RefreshReg$(_c, \"RepositoryList\");","map":{"version":3,"names":["React","useEffect","useState","CommitList","Modal","jsxDEV","_jsxDEV","RepositoryList","_s","repositories","setRepositories","selectedRepository","setSelectedRepository","modalIsOpen","setModalIsOpen","fetch","then","response","json","data","catch","error","console","log","handleRepositoryClick","repository","closeModal","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","name","language","description","stargazers_count","forks_count","created_at","id","isOpen","onRequestClose","style","customStyles","repoName","closeButtonStyles","_c","border","background","fontSize","overlay","backgroundColor","content","position","top","left","transform","width","height","display","flexDirection","alignItems","justifyContent","$RefreshReg$"],"sources":["/Users/chuhanyu/Desktop/temp/frontend-intern-hackday/src/components/RepositoryList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport CommitList from \"./CommitList\";\nimport Modal from \"react-modal\";\n\nfunction RepositoryList() {\n  const [repositories, setRepositories] = useState([]);\n  const [selectedRepository, setSelectedRepository] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  useEffect(() => {\n    fetch(\"https://api.github.com/orgs/Netflix/repos\")\n      .then((response) => response.json())\n      .then((data) => setRepositories(data))\n      .catch((error) => console.log(error));\n  }, []);\n\n  const handleRepositoryClick = (repository) => {\n    setSelectedRepository(repository);\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setSelectedRepository(null);\n    setModalIsOpen(false);\n  };\n\n  return (\n    <div>\n      <h1>Netflix Repositories</h1>\n      <ul>\n        {repositories.map((repository) => (\n          <li key={repository.id}>\n            <button onClick={() => handleRepositoryClick(repository)}>\n              {repository.name}\n            </button>\n            <p>Language: {repository.language}</p>\n            <p>Description: {repository.description}</p>\n            <p>Star count: {repository.stargazers_count}</p>\n            <p>Fork count: {repository.forks_count}</p>\n            <p>Date created: {repository.created_at}</p>\n          </li>\n        ))}\n      </ul>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n      >\n        {selectedRepository && (\n          <div>\n            <h2>Commit History for {selectedRepository.name}</h2>\n            <CommitList repoName={selectedRepository.name} />\n          </div>\n        )}\n        <button onClick={closeModal} style={closeButtonStyles}>\n          Close\n        </button>\n      </Modal>\n    </div>\n  );\n}\n\nconst closeButtonStyles = {\n  border: \"none\",\n  background: \"none\",\n  fontSize: \"24px\",\n};\n\nconst customStyles = {\n  overlay: {\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n  },\n  content: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"800px\",\n    height: \"800px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n};\n\nexport default RepositoryList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}