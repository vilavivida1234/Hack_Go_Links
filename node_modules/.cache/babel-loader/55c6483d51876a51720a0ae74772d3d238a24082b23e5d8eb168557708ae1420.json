{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nfunction CommitList(_ref) {\n  _s();\n  let {\n    repoName\n  } = _ref;\n  //   const [commits, setCommits] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://api.github.com/repos/Netflix/${repoName}/commits`).then(response => response.json()).then(data => console.log(data)).catch(error => console.log(error));\n  }, [repoName]);\n\n  //   return (\n  //     <div>\n  //       <ul>\n  //         {commits.map((commit) => (\n  //           <li key={commit.sha}>\n  //             <p>Commit message: {commit.commit.message}</p>\n  //             <p>Committer username: {commit.commit.committer.name}</p>\n  //             <p>Commit hash: {commit.sha}</p>\n  //             <p>Date created: {commit.commit.committer.date}</p>\n  //           </li>\n  //         ))}\n  //       </ul>\n  //     </div>\n  //   );\n}\n_s(CommitList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CommitList;\nCommitList.propTypes = {\n  repoName: PropTypes.string\n};\nexport default CommitList;\nvar _c;\n$RefreshReg$(_c, \"CommitList\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","CommitList","_ref","_s","repoName","fetch","then","response","json","data","console","log","catch","error","_c","propTypes","string","$RefreshReg$"],"sources":["/Users/chuhanyu/Desktop/temp/frontend-intern-hackday/src/components/CommitList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction CommitList({ repoName }) {\n  //   const [commits, setCommits] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://api.github.com/repos/Netflix/${repoName}/commits`)\n      .then((response) => response.json())\n      .then((data) => console.log(data))\n      .catch((error) => console.log(error));\n  }, [repoName]);\n\n  //   return (\n  //     <div>\n  //       <ul>\n  //         {commits.map((commit) => (\n  //           <li key={commit.sha}>\n  //             <p>Commit message: {commit.commit.message}</p>\n  //             <p>Committer username: {commit.commit.committer.name}</p>\n  //             <p>Commit hash: {commit.sha}</p>\n  //             <p>Date created: {commit.commit.committer.date}</p>\n  //           </li>\n  //         ))}\n  //       </ul>\n  //     </div>\n  //   );\n}\n\nCommitList.propTypes = {\n  repoName: PropTypes.string,\n};\n\nexport default CommitList;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAElC,SAASC,UAAUA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC9B;;EAEAJ,SAAS,CAAC,MAAM;IACdO,KAAK,CAAE,wCAAuCD,QAAS,UAAS,CAAC,CAC9DE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CACjCG,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;;EAEd;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;AAACD,EAAA,CAxBQF,UAAU;AAAAa,EAAA,GAAVb,UAAU;AA0BnBA,UAAU,CAACc,SAAS,GAAG;EACrBX,QAAQ,EAAEJ,SAAS,CAACgB;AACtB,CAAC;AAED,eAAef,UAAU;AAAC,IAAAa,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}