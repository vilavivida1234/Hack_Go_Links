{"ast":null,"code":"var _jsxFileName = \"/Users/chuhanyu/Desktop/temp/frontend-intern-hackday/src/components/CommitList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommitList(_ref) {\n  _s();\n  let {\n    organizationName,\n    repoName\n  } = _ref;\n  const [commits, setCommits] = useState([]);\n  useEffect(() => {\n    fetch(`https://api.github.com/repos/${organizationName}/${repoName}/commits`, {\n      headers: {\n        Authorization: `Bearer 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`\n      }\n    }).then(response => response.json()).then(data => {\n      const commitsData = data.map(commit => commit.commit);\n      setCommits(commitsData);\n    }).catch(error => console.log(error));\n  }, [organizationName, repoName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: commits.length > 0 ? /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: commits.map((commit, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Commit message: \", commit.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Committer username: \", commit.committer.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Commit hash: \", commit.tree.sha]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date created: \", commit.committer.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No commits found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(CommitList, \"w+o7gomETcDdzzrQFE1WNkqk+L0=\");\n_c = CommitList;\nCommitList.propTypes = {\n  organizationName: PropTypes.string,\n  repoName: PropTypes.string\n};\nexport default CommitList;\nvar _c;\n$RefreshReg$(_c, \"CommitList\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","jsxDEV","_jsxDEV","CommitList","_ref","_s","organizationName","repoName","commits","setCommits","fetch","headers","Authorization","then","response","json","data","commitsData","map","commit","catch","error","console","log","children","length","index","message","fileName","_jsxFileName","lineNumber","columnNumber","committer","name","tree","sha","date","_c","propTypes","string","$RefreshReg$"],"sources":["/Users/chuhanyu/Desktop/temp/frontend-intern-hackday/src/components/CommitList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction CommitList({ organizationName, repoName }) {\n  const [commits, setCommits] = useState([]);\n\n  useEffect(() => {\n    fetch(\n      `https://api.github.com/repos/${organizationName}/${repoName}/commits`,\n      {\n        headers: {\n          Authorization: `Bearer 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`,\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        const commitsData = data.map((commit) => commit.commit);\n        setCommits(commitsData);\n      })\n      .catch((error) => console.log(error));\n  }, [organizationName, repoName]);\n\n  return (\n    <div>\n      {commits.length > 0 ? (\n        <ol>\n          {commits.map((commit, index) => (\n            <li key={index}>\n              <p>Commit message: {commit.message}</p>\n              <p>Committer username: {commit.committer.name}</p>\n              <p>Commit hash: {commit.tree.sha}</p>\n              <p>Date created: {commit.committer.date}</p>\n            </li>\n          ))}\n        </ol>\n      ) : (\n        <p>No commits found.</p>\n      )}\n    </div>\n  );\n}\n\nCommitList.propTypes = {\n  organizationName: PropTypes.string,\n  repoName: PropTypes.string,\n};\n\nexport default CommitList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,UAAUA,CAAAC,IAAA,EAAiC;EAAAC,EAAA;EAAA,IAAhC;IAAEC,gBAAgB;IAAEC;EAAS,CAAC,GAAAH,IAAA;EAChD,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACdY,KAAK,CACF,gCAA+BJ,gBAAiB,IAAGC,QAAS,UAAS,EACtE;MACEI,OAAO,EAAE;QACPC,aAAa,EAAG;MAClB;IACF,CACF,CAAC,CACEC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,MAAMC,WAAW,GAAGD,IAAI,CAACE,GAAG,CAAEC,MAAM,IAAKA,MAAM,CAACA,MAAM,CAAC;MACvDV,UAAU,CAACQ,WAAW,CAAC;IACzB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,CAACf,gBAAgB,EAAEC,QAAQ,CAAC,CAAC;EAEhC,oBACEL,OAAA;IAAAsB,QAAA,EACGhB,OAAO,CAACiB,MAAM,GAAG,CAAC,gBACjBvB,OAAA;MAAAsB,QAAA,EACGhB,OAAO,CAACU,GAAG,CAAC,CAACC,MAAM,EAAEO,KAAK,kBACzBxB,OAAA;QAAAsB,QAAA,gBACEtB,OAAA;UAAAsB,QAAA,GAAG,kBAAgB,EAACL,MAAM,CAACQ,OAAO;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvC7B,OAAA;UAAAsB,QAAA,GAAG,sBAAoB,EAACL,MAAM,CAACa,SAAS,CAACC,IAAI;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClD7B,OAAA;UAAAsB,QAAA,GAAG,eAAa,EAACL,MAAM,CAACe,IAAI,CAACC,GAAG;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrC7B,OAAA;UAAAsB,QAAA,GAAG,gBAAc,EAACL,MAAM,CAACa,SAAS,CAACI,IAAI;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJrCL,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAEL7B,OAAA;MAAAsB,QAAA,EAAG;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACxB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1B,EAAA,CAtCQF,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AAwCnBA,UAAU,CAACmC,SAAS,GAAG;EACrBhC,gBAAgB,EAAEN,SAAS,CAACuC,MAAM;EAClChC,QAAQ,EAAEP,SAAS,CAACuC;AACtB,CAAC;AAED,eAAepC,UAAU;AAAC,IAAAkC,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}