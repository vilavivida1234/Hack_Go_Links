{"ast":null,"code":"var _jsxFileName = \"/Users/chuhanyu/Desktop/temp/frontend-intern-hackday/src/components/CommitList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommitList(_ref) {\n  _s();\n  let {\n    repoName\n  } = _ref;\n  const [commits, setCommits] = useState([]);\n  useEffect(() => {\n    fetch(`https://api.github.com/repos/Netflix/${repoName}/commits`).then(response => response.json()).then(data => console.log(data)).then(data => setCommits(data)).catch(error => console.log(error));\n  }, [repoName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: commits && commits.length > 0 ? commits.map(commit => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Commit message: \", commit.commit.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Committer username: \", commit.commit.committer.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Commit hash: \", commit.sha]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date created: \", commit.commit.committer.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this)]\n      }, commit.sha, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No commits found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(CommitList, \"w+o7gomETcDdzzrQFE1WNkqk+L0=\");\n_c = CommitList;\nCommitList.propTypes = {\n  repoName: PropTypes.string\n};\nexport default CommitList;\nvar _c;\n$RefreshReg$(_c, \"CommitList\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","jsxDEV","_jsxDEV","CommitList","_ref","_s","repoName","commits","setCommits","fetch","then","response","json","data","console","log","catch","error","children","length","map","commit","message","fileName","_jsxFileName","lineNumber","columnNumber","committer","name","sha","date","_c","propTypes","string","$RefreshReg$"],"sources":["/Users/chuhanyu/Desktop/temp/frontend-intern-hackday/src/components/CommitList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction CommitList({ repoName }) {\n  const [commits, setCommits] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://api.github.com/repos/Netflix/${repoName}/commits`)\n      .then((response) => response.json())\n      .then((data) => console.log(data))\n      .then((data) => setCommits(data))\n      .catch((error) => console.log(error));\n  }, [repoName]);\n\n  return (\n    <div>\n      <ul>\n        {commits && commits.length > 0 ? (\n          commits.map((commit) => (\n            <li key={commit.sha}>\n              <p>Commit message: {commit.commit.message}</p>\n              <p>Committer username: {commit.commit.committer.name}</p>\n              <p>Commit hash: {commit.sha}</p>\n              <p>Date created: {commit.commit.committer.date}</p>\n            </li>\n          ))\n        ) : (\n          <p>No commits found.</p>\n        )}\n      </ul>\n    </div>\n  );\n}\n\nCommitList.propTypes = {\n  repoName: PropTypes.string,\n};\n\nexport default CommitList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,UAAUA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC9B,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACdW,KAAK,CAAE,wCAAuCH,QAAS,UAAS,CAAC,CAC9DI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CACjCH,IAAI,CAAEG,IAAI,IAAKL,UAAU,CAACK,IAAI,CAAC,CAAC,CAChCG,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;EAEd,oBACEJ,OAAA;IAAAgB,QAAA,eACEhB,OAAA;MAAAgB,QAAA,EACGX,OAAO,IAAIA,OAAO,CAACY,MAAM,GAAG,CAAC,GAC5BZ,OAAO,CAACa,GAAG,CAAEC,MAAM,iBACjBnB,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UAAAgB,QAAA,GAAG,kBAAgB,EAACG,MAAM,CAACA,MAAM,CAACC,OAAO;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9CxB,OAAA;UAAAgB,QAAA,GAAG,sBAAoB,EAACG,MAAM,CAACA,MAAM,CAACM,SAAS,CAACC,IAAI;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzDxB,OAAA;UAAAgB,QAAA,GAAG,eAAa,EAACG,MAAM,CAACQ,GAAG;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChCxB,OAAA;UAAAgB,QAAA,GAAG,gBAAc,EAACG,MAAM,CAACA,MAAM,CAACM,SAAS,CAACG,IAAI;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJ5CL,MAAM,CAACQ,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKf,CACL,CAAC,gBAEFxB,OAAA;QAAAgB,QAAA,EAAG;MAAiB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACxB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACrB,EAAA,CA7BQF,UAAU;AAAA4B,EAAA,GAAV5B,UAAU;AA+BnBA,UAAU,CAAC6B,SAAS,GAAG;EACrB1B,QAAQ,EAAEN,SAAS,CAACiC;AACtB,CAAC;AAED,eAAe9B,UAAU;AAAC,IAAA4B,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}