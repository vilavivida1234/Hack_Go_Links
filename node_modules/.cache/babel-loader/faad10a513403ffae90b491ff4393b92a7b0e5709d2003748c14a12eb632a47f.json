{"ast":null,"code":"var _jsxFileName = \"/Users/chuhanyu/Desktop/temp/frontend-intern-hackday/src/components/RepositoryList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RepositoryList() {\n  _s();\n  const [repositories, setRepositories] = useState([]);\n  const [selectedRepository, setSelectedRepository] = useState(null);\n  useEffect(() => {\n    fetch(\"https://api.github.com/orgs/Netflix/repos\").then(response => response.json()).then(data => setRepositories(data)).catch(error => console.log(error));\n  }, []);\n  const handleRepositoryClick = repository => {\n    setSelectedRepository(repository);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Netflix Repositories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: repositories.map(repository => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRepositoryClick(repository),\n          children: repository.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Language: \", repository.language]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", repository.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Star count: \", repository.stargazers_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Fork count: \", repository.forks_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date created: \", repository.created_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, repository.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), selectedRepository && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Commit History for \", selectedRepository.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(RepositoryList, \"mL6pFrsRqiHsgmr4q/8g7CwMOaw=\");\n_c = RepositoryList;\nexport default RepositoryList;\nvar _c;\n$RefreshReg$(_c, \"RepositoryList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","RepositoryList","_s","repositories","setRepositories","selectedRepository","setSelectedRepository","fetch","then","response","json","data","catch","error","console","log","handleRepositoryClick","repository","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","name","language","description","stargazers_count","forks_count","created_at","id","_c","$RefreshReg$"],"sources":["/Users/chuhanyu/Desktop/temp/frontend-intern-hackday/src/components/RepositoryList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction RepositoryList() {\n  const [repositories, setRepositories] = useState([]);\n  const [selectedRepository, setSelectedRepository] = useState(null);\n\n  useEffect(() => {\n    fetch(\"https://api.github.com/orgs/Netflix/repos\")\n      .then((response) => response.json())\n      .then((data) => setRepositories(data))\n      .catch((error) => console.log(error));\n  }, []);\n\n  const handleRepositoryClick = (repository) => {\n    setSelectedRepository(repository);\n  };\n\n  return (\n    <div>\n      <h1>Netflix Repositories</h1>\n      <ul>\n        {repositories.map((repository) => (\n          <li key={repository.id}>\n            <button onClick={() => handleRepositoryClick(repository)}>\n              {repository.name}\n            </button>\n            <p>Language: {repository.language}</p>\n            <p>Description: {repository.description}</p>\n            <p>Star count: {repository.stargazers_count}</p>\n            <p>Fork count: {repository.forks_count}</p>\n            <p>Date created: {repository.created_at}</p>\n          </li>\n        ))}\n      </ul>\n      {selectedRepository && (\n        <div>\n          <h2>Commit History for {selectedRepository.name}</h2>\n          {/* Render the commit history for the selected repository */}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default RepositoryList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}